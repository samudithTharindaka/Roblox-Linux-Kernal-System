--!strict
-- HandbookUI.luau
-- Interactive handbook/guide for players

local UserInputService = game:GetService("UserInputService")
local Constants = require(game.ReplicatedStorage.Shared.Constants)

local HandbookUI = {}
HandbookUI.__index = HandbookUI

function HandbookUI.new(playerGui: PlayerGui)
	local self = setmetatable({}, HandbookUI)

	self.playerGui = playerGui
	self.screenGui = nil
	self.handbookFrame = nil
	self.contentFrame = nil
	self.searchBox = nil
	self.isVisible = false
	self.currentTab = "basics"
	self.tabs = {}

	self:_createUI()
	self:_loadContent()

	return self
end

function HandbookUI:_createUI()
	-- Create ScreenGui
	self.screenGui = Instance.new("ScreenGui")
	self.screenGui.Name = "HandbookGui"
	self.screenGui.ResetOnSpawn = false
	self.screenGui.ZIndexBehavior = Enum.ZIndexBehavior.Sibling
	self.screenGui.DisplayOrder = 50
	self.screenGui.Parent = self.playerGui

	-- Main Handbook Frame
	self.handbookFrame = Instance.new("Frame")
	self.handbookFrame.Name = "Handbook"
	self.handbookFrame.Size = UDim2.new(0.7, 0, 0.8, 0)
	self.handbookFrame.Position = UDim2.new(0.15, 0, 0.1, 0)
	self.handbookFrame.BackgroundColor3 = Color3.fromRGB(25, 25, 35)
	self.handbookFrame.BorderSizePixel = 0
	self.handbookFrame.Visible = false
	self.handbookFrame.Parent = self.screenGui

	local corner = Instance.new("UICorner")
	corner.CornerRadius = UDim.new(0, 12)
	corner.Parent = self.handbookFrame

	local shadow = Instance.new("UIStroke")
	shadow.Color = Color3.fromRGB(0, 0, 0)
	shadow.Thickness = 3
	shadow.Transparency = 0.5
	shadow.Parent = self.handbookFrame

	-- Title Bar
	local titleBar = Instance.new("Frame")
	titleBar.Name = "TitleBar"
	titleBar.Size = UDim2.new(1, 0, 0, 50)
	titleBar.BackgroundColor3 = Color3.fromRGB(40, 40, 55)
	titleBar.BorderSizePixel = 0
	titleBar.Parent = self.handbookFrame

	local titleCorner = Instance.new("UICorner")
	titleCorner.CornerRadius = UDim.new(0, 12)
	titleCorner.Parent = titleBar

	-- Title Icon
	local titleIcon = Instance.new("TextLabel")
	titleIcon.Size = UDim2.new(0, 40, 0, 40)
	titleIcon.Position = UDim2.new(0, 10, 0, 5)
	titleIcon.BackgroundTransparency = 1
	titleIcon.Text = "üìñ"
	titleIcon.Font = Enum.Font.SourceSansBold
	titleIcon.TextSize = 32
	titleIcon.Parent = titleBar

	-- Title Text
	local titleLabel = Instance.new("TextLabel")
	titleLabel.Name = "Title"
	titleLabel.Size = UDim2.new(1, -140, 1, 0)
	titleLabel.Position = UDim2.new(0, 55, 0, 0)
	titleLabel.BackgroundTransparency = 1
	titleLabel.Text = "Hacker's Handbook - Learn Linux & Security"
	titleLabel.Font = Enum.Font.SourceSansBold
	titleLabel.TextSize = 20
	titleLabel.TextColor3 = Constants.COLORS.PROMPT_COLOR
	titleLabel.TextXAlignment = Enum.TextXAlignment.Left
	titleLabel.Parent = titleBar

	-- Close Button
	local closeButton = Instance.new("TextButton")
	closeButton.Name = "CloseButton"
	closeButton.Size = UDim2.new(0, 35, 0, 35)
	closeButton.Position = UDim2.new(1, -45, 0, 7.5)
	closeButton.BackgroundColor3 = Color3.fromRGB(200, 50, 50)
	closeButton.Text = "‚úï"
	closeButton.Font = Enum.Font.SourceSansBold
	closeButton.TextSize = 20
	closeButton.TextColor3 = Color3.fromRGB(255, 255, 255)
	closeButton.Parent = titleBar

	local closeCorner = Instance.new("UICorner")
	closeCorner.CornerRadius = UDim.new(0, 8)
	closeCorner.Parent = closeButton

	closeButton.MouseButton1Click:Connect(function()
		self:hide()
	end)

	-- Search Bar
	local searchContainer = Instance.new("Frame")
	searchContainer.Name = "SearchContainer"
	searchContainer.Size = UDim2.new(1, -20, 0, 40)
	searchContainer.Position = UDim2.new(0, 10, 0, 60)
	searchContainer.BackgroundColor3 = Color3.fromRGB(35, 35, 45)
	searchContainer.BorderSizePixel = 0
	searchContainer.Parent = self.handbookFrame

	local searchCorner = Instance.new("UICorner")
	searchCorner.CornerRadius = UDim.new(0, 8)
	searchCorner.Parent = searchContainer

	local searchIcon = Instance.new("TextLabel")
	searchIcon.Size = UDim2.new(0, 30, 1, 0)
	searchIcon.Position = UDim2.new(0, 5, 0, 0)
	searchIcon.BackgroundTransparency = 1
	searchIcon.Text = "üîç"
	searchIcon.Font = Enum.Font.SourceSans
	searchIcon.TextSize = 18
	searchIcon.Parent = searchContainer

	self.searchBox = Instance.new("TextBox")
	self.searchBox.Name = "SearchBox"
	self.searchBox.Size = UDim2.new(1, -45, 1, -8)
	self.searchBox.Position = UDim2.new(0, 40, 0, 4)
	self.searchBox.BackgroundTransparency = 1
	self.searchBox.PlaceholderText = "Search commands, topics, or guides..."
	self.searchBox.Text = ""
	self.searchBox.Font = Enum.Font.SourceSans
	self.searchBox.TextSize = 14
	self.searchBox.TextColor3 = Color3.fromRGB(255, 255, 255)
	self.searchBox.TextXAlignment = Enum.TextXAlignment.Left
	self.searchBox.ClearTextOnFocus = false
	self.searchBox.Parent = searchContainer

	self.searchBox:GetPropertyChangedSignal("Text"):Connect(function()
		self:_filterContent(self.searchBox.Text)
	end)

	-- Tab Bar
	local tabBar = Instance.new("Frame")
	tabBar.Name = "TabBar"
	tabBar.Size = UDim2.new(1, -20, 0, 45)
	tabBar.Position = UDim2.new(0, 10, 0, 110)
	tabBar.BackgroundColor3 = Color3.fromRGB(30, 30, 40)
	tabBar.BorderSizePixel = 0
	tabBar.Parent = self.handbookFrame

	local tabCorner = Instance.new("UICorner")
	tabCorner.CornerRadius = UDim.new(0, 8)
	tabCorner.Parent = tabBar

	local tabLayout = Instance.new("UIListLayout")
	tabLayout.FillDirection = Enum.FillDirection.Horizontal
	tabLayout.HorizontalAlignment = Enum.HorizontalAlignment.Left
	tabLayout.Padding = UDim.new(0, 5)
	tabLayout.Parent = tabBar

	-- Create Tabs
	local tabData = {
		{ id = "basics", icon = "üéì", text = "Basics" },
		{ id = "commands", icon = "‚å®Ô∏è", text = "Commands" },
		{ id = "hacking", icon = "üíÄ", text = "Hacking" },
		{ id = "defense", icon = "üõ°Ô∏è", text = "Defense" },
		{ id = "tips", icon = "üí°", text = "Pro Tips" },
	}

	for _, tab in ipairs(tabData) do
		self:_createTab(tabBar, tab.id, tab.icon, tab.text)
	end

	-- Content Area
	local contentScroll = Instance.new("ScrollingFrame")
	contentScroll.Name = "ContentScroll"
	contentScroll.Size = UDim2.new(1, -20, 1, -175)
	contentScroll.Position = UDim2.new(0, 10, 0, 165)
	contentScroll.BackgroundColor3 = Color3.fromRGB(30, 30, 40)
	contentScroll.BorderSizePixel = 0
	contentScroll.ScrollBarThickness = 10
	contentScroll.ScrollBarImageColor3 = Constants.COLORS.PROMPT_COLOR
	contentScroll.CanvasSize = UDim2.new(0, 0, 0, 0)
	contentScroll.Parent = self.handbookFrame

	local contentCorner = Instance.new("UICorner")
	contentCorner.CornerRadius = UDim.new(0, 8)
	contentCorner.Parent = contentScroll

	self.contentFrame = Instance.new("Frame")
	self.contentFrame.Name = "Content"
	self.contentFrame.Size = UDim2.new(1, -20, 1, 0)
	self.contentFrame.Position = UDim2.new(0, 10, 0, 10)
	self.contentFrame.BackgroundTransparency = 1
	self.contentFrame.Parent = contentScroll

	local contentLayout = Instance.new("UIListLayout")
	contentLayout.SortOrder = Enum.SortOrder.LayoutOrder
	contentLayout.Padding = UDim.new(0, 15)
	contentLayout.Parent = self.contentFrame

	-- Auto-resize canvas
	contentLayout:GetPropertyChangedSignal("AbsoluteContentSize"):Connect(function()
		contentScroll.CanvasSize = UDim2.new(0, 0, 0, contentLayout.AbsoluteContentSize.Y + 20)
	end)
end

function HandbookUI:_createTab(parent: Frame, id: string, icon: string, text: string)
	local tab = Instance.new("TextButton")
	tab.Name = id
	tab.Size = UDim2.new(0, 130, 1, -10)
	tab.BackgroundColor3 = Color3.fromRGB(40, 40, 55)
	tab.BorderSizePixel = 0
	tab.Text = icon .. " " .. text
	tab.Font = Enum.Font.SourceSansBold
	tab.TextSize = 14
	tab.TextColor3 = Color3.fromRGB(200, 200, 200)
	tab.Parent = parent

	local tabCorner = Instance.new("UICorner")
	tabCorner.CornerRadius = UDim.new(0, 6)
	tabCorner.Parent = tab

	self.tabs[id] = tab

	tab.MouseButton1Click:Connect(function()
		self:_switchTab(id)
	end)

	tab.MouseEnter:Connect(function()
		if self.currentTab ~= id then
			tab.BackgroundColor3 = Color3.fromRGB(50, 50, 65)
		end
	end)

	tab.MouseLeave:Connect(function()
		if self.currentTab ~= id then
			tab.BackgroundColor3 = Color3.fromRGB(40, 40, 55)
		end
	end)
end

function HandbookUI:_switchTab(tabId: string)
	-- Update tab appearance
	for id, tab in pairs(self.tabs) do
		if id == tabId then
			tab.BackgroundColor3 = Constants.COLORS.PROMPT_COLOR
			tab.TextColor3 = Color3.fromRGB(0, 0, 0)
		else
			tab.BackgroundColor3 = Color3.fromRGB(40, 40, 55)
			tab.TextColor3 = Color3.fromRGB(200, 200, 200)
		end
	end

	self.currentTab = tabId
	self:_updateContent(tabId)
end

function HandbookUI:_updateContent(tabId: string)
	-- Clear existing content
	for _, child in ipairs(self.contentFrame:GetChildren()) do
		if not child:IsA("UIListLayout") then
			child:Destroy()
		end
	end

	-- Load content based on tab
	if tabId == "basics" then
		self:_loadBasicsContent()
	elseif tabId == "commands" then
		self:_loadCommandsContent()
	elseif tabId == "hacking" then
		self:_loadHackingContent()
	elseif tabId == "defense" then
		self:_loadDefenseContent()
	elseif tabId == "tips" then
		self:_loadTipsContent()
	end
end

function HandbookUI:_createSection(title: string, content: string, orderIndex: number)
	local section = Instance.new("Frame")
	section.Name = "Section_" .. title
	section.Size = UDim2.new(1, 0, 0, 0)
	section.BackgroundColor3 = Color3.fromRGB(35, 35, 48)
	section.BorderSizePixel = 0
	section.LayoutOrder = orderIndex
	section.Parent = self.contentFrame

	local sectionCorner = Instance.new("UICorner")
	sectionCorner.CornerRadius = UDim.new(0, 8)
	sectionCorner.Parent = section

	local padding = Instance.new("UIPadding")
	padding.PaddingTop = UDim.new(0, 15)
	padding.PaddingBottom = UDim.new(0, 15)
	padding.PaddingLeft = UDim.new(0, 15)
	padding.PaddingRight = UDim.new(0, 15)
	padding.Parent = section

	-- Title
	local titleLabel = Instance.new("TextLabel")
	titleLabel.Name = "Title"
	titleLabel.Size = UDim2.new(1, 0, 0, 25)
	titleLabel.BackgroundTransparency = 1
	titleLabel.Text = title
	titleLabel.Font = Enum.Font.SourceSansBold
	titleLabel.TextSize = 18
	titleLabel.TextColor3 = Constants.COLORS.PROMPT_COLOR
	titleLabel.TextXAlignment = Enum.TextXAlignment.Left
	titleLabel.TextYAlignment = Enum.TextYAlignment.Top
	titleLabel.Parent = section

	-- Content
	local contentLabel = Instance.new("TextLabel")
	contentLabel.Name = "Content"
	contentLabel.Size = UDim2.new(1, 0, 0, 0)
	contentLabel.Position = UDim2.new(0, 0, 0, 30)
	contentLabel.BackgroundTransparency = 1
	contentLabel.Text = content
	contentLabel.Font = Enum.Font.SourceSans
	contentLabel.TextSize = 14
	contentLabel.TextColor3 = Color3.fromRGB(220, 220, 220)
	contentLabel.TextXAlignment = Enum.TextXAlignment.Left
	contentLabel.TextYAlignment = Enum.TextYAlignment.Top
	contentLabel.TextWrapped = true
	contentLabel.Parent = section

	-- Auto-size
	local textBounds = contentLabel.TextBounds
	contentLabel.Size = UDim2.new(1, 0, 0, textBounds.Y)
	section.Size = UDim2.new(1, 0, 0, textBounds.Y + 50)

	return section
end

function HandbookUI:_loadContent()
	self:_switchTab("basics")
end

function HandbookUI:_loadBasicsContent()
	self:_createSection(
		"üéÆ Welcome to RobloxOS!",
		[[This is a Linux-like operating system where you can learn hacking and cybersecurity in a fun, safe environment!

You control a virtual computer with:
‚Ä¢ A terminal (command line) to type commands
‚Ä¢ A file system to store files and folders
‚Ä¢ Network tools to connect with other players
‚Ä¢ Security tools to protect yourself
‚Ä¢ Hacking tools to practice ethical hacking (simulated!)

Everything you do here is SIMULATED and SAFE. No real hacking!]],
		1
	)

	self:_createSection(
		"üñ•Ô∏è What is a Terminal?",
		[[The terminal is a text-based interface where you type commands instead of clicking buttons.

Think of it like texting with your computer! You type what you want to do, and the computer responds.

Example:
YOU TYPE: ls
COMPUTER SHOWS: Your list of files

It might seem weird at first, but it's actually super powerful once you learn it!]],
		2
	)

	self:_createSection(
		"üìÅ Understanding Files & Folders",
		[[Just like on your phone or computer, you can:
‚Ä¢ Create files (like documents or notes)
‚Ä¢ Make folders to organize things
‚Ä¢ Move files around
‚Ä¢ Delete stuff you don't need

Commands to try:
‚Ä¢ ls - See what's in your current folder
‚Ä¢ cd foldername - Go into a folder
‚Ä¢ mkdir test - Create a new folder called "test"
‚Ä¢ nano myfile.txt - Create and edit a file]],
		3
	)

	self:_createSection(
		"üåê Your IP Address",
		[[Every computer on a network has an IP address - it's like your home address, but for computers!

Your IP is automatically assigned when you join the game.

Type: ifconfig
You'll see your IP like: 192.168.1.83

Other players can see your IP if you're public, and you can see theirs too!]],
		4
	)
end

function HandbookUI:_loadCommandsContent()
	self:_createSection(
		"üìã Most Important Commands",
		[[These are the commands you'll use most:

NAVIGATION:
‚Ä¢ pwd - Shows where you are
‚Ä¢ ls - Lists files in current folder
‚Ä¢ cd <folder> - Move to a folder
‚Ä¢ cd ~ - Go back to your home folder

FILES:
‚Ä¢ touch <file> - Create empty file
‚Ä¢ nano <file> - Create/edit file (opens editor)
‚Ä¢ cat <file> - Read a file
‚Ä¢ rm <file> - Delete a file

FOLDERS:
‚Ä¢ mkdir <name> - Create folder
‚Ä¢ rmdir <name> - Delete empty folder

GETTING HELP:
‚Ä¢ help - Shows all commands
‚Ä¢ help <command> - Help for specific command]],
		1
	)

	self:_createSection(
		"üîê Security Commands",
		[[PASSWORD & PROTECTION:
‚Ä¢ passwd <password> - Set your password
‚Ä¢ snapshot create <name> - Backup your system
‚Ä¢ snapshot restore <name> - Restore from backup
‚Ä¢ ufw status - Check firewall
‚Ä¢ ufw allow <port> - Open a port
‚Ä¢ ufw deny <port> - Block a port

MONITORING:
‚Ä¢ connections - See who's connecting to you
‚Ä¢ authlog - View security events
‚Ä¢ monitor - Watch for attacks in real-time
‚Ä¢ ps - See running programs
‚Ä¢ htop - Fancy process viewer]],
		2
	)

	self:_createSection(
		"üåê Network Commands",
		[[DISCOVERY:
‚Ä¢ players - See who else is online
‚Ä¢ whois <ip> - Get info about a player
‚Ä¢ ping <ip> - Test connection to someone
‚Ä¢ ifconfig - See your own IP address
‚Ä¢ netstat - See your open ports

COMMUNICATION:
(Some coming soon!)
‚Ä¢ msg <player> <text> - Send a message
‚Ä¢ mail <player> - Send an email

CONNECTION:
‚Ä¢ scan <ip> - Scan someone's ports
‚Ä¢ connect <ip>:<port> - Connect to service]],
		3
	)

	self:_createSection(
		"üíª System Commands",
		[[INFO:
‚Ä¢ whoami - Shows your username
‚Ä¢ date - Current date and time
‚Ä¢ uptime - How long system has been running
‚Ä¢ clear - Clear the terminal screen

PROCESSES:
‚Ä¢ ps - List running programs
‚Ä¢ htop - Interactive process viewer
‚Ä¢ kill <pid> - Stop a program

OTHER:
‚Ä¢ echo <text> - Print something
‚Ä¢ history - See commands you've typed]],
		4
	)
end

function HandbookUI:_loadHackingContent()
	self:_createSection(
		"‚ö†Ô∏è Important: Ethical Hacking Only!",
		[[In RobloxOS, "hacking" is a game mechanic for learning cybersecurity concepts.

‚úÖ ALLOWED (in this game):
‚Ä¢ Practicing on other players who consent
‚Ä¢ Learning how attacks work
‚Ä¢ Testing your own defenses
‚Ä¢ Educational experimentation

‚ùå NOT ALLOWED (ever):
‚Ä¢ Real-world hacking
‚Ä¢ Attacking real systems
‚Ä¢ Using these techniques outside the game
‚Ä¢ Harassing other players

This is for LEARNING and FUN only!]],
		1
	)

	self:_createSection(
		"üîç Phase 1: Reconnaissance (Intel Gathering)",
		[[Before any attack, you need information:

STEP 1: Find targets
‚Ä¢ players - See who's online

STEP 2: Gather info
‚Ä¢ whois <ip> - Learn about them
‚Ä¢ ping <ip> - Test if they're reachable

STEP 3: Scan for weaknesses
‚Ä¢ scan <ip> - Find open ports
  (Warning: They'll see you doing this!)

STEP 4: Take notes
‚Ä¢ Create a file to track what you learn
‚Ä¢ nano targets.txt
‚Ä¢ Write down IP, username, what ports are open]],
		2
	)

	self:_createSection(
		"üí• Phase 2: Initial Access",
		[[Ways to try to get in:

METHOD 1: Brute Force (Password Guessing)
‚Ä¢ bruteforce <ip> <username>
‚Ä¢ Tries common passwords
‚Ä¢ Very noisy - target will know!
‚Ä¢ Works better on weak passwords

METHOD 2: Social Engineering
‚Ä¢ phish <player>
‚Ä¢ Send fake messages
‚Ä¢ Trick them into giving password
‚Ä¢ Requires them to fall for it

METHOD 3: Exploits
‚Ä¢ exploit <ip> <exploit_name>
‚Ä¢ Use known vulnerabilities
‚Ä¢ Only works if they haven't patched
‚Ä¢ Less noisy than brute force

METHOD 4: Be Creative!
‚Ä¢ Sometimes the best hack is asking nicely
‚Ä¢ Or waiting for them to make a mistake]],
		3
	)

	self:_createSection(
		"ü¶† Phase 3: Post-Access Actions",
		[[If you successfully get access:

PAYLOADS:
‚Ä¢ payload create <name> - Make malware
‚Ä¢ payload list - See available payloads
‚Ä¢ deploy <payload> <target> - Install it

NETWORK SNIFFING:
‚Ä¢ sniff <interface> - Capture network data
‚Ä¢ Look for unencrypted passwords

MAINTAINING ACCESS:
‚Ä¢ Install backdoors
‚Ä¢ Create new user accounts
‚Ä¢ Hide your presence

OBJECTIVES:
‚Ä¢ Read their files: cat secretfile.txt
‚Ä¢ Copy important data
‚Ä¢ Plant fake information
‚Ä¢ Prove you were there (leave a message!)]],
		4
	)

	self:_createSection(
		"üéØ Pro Hacker Tips",
		[[BEFORE ATTACKING:
1. Make sure you have permission
2. Know your target (recon is key!)
3. Have an escape plan
4. Document what you do

DURING AN ATTACK:
1. Be patient - don't rush
2. Watch for alerts from target
3. Cover your tracks
4. Stay stealthy when possible

AFTER SUCCESS:
1. Document what worked
2. Help the victim fix their security
3. Share techniques (educational!)
4. Level up your reputation]],
		5
	)
end

function HandbookUI:_loadDefenseContent()
	self:_createSection(
		"üõ°Ô∏è Defense Basics",
		[[The best defense is being prepared!

GOLDEN RULES:
1. Always set a STRONG password
2. Create regular backups
3. Monitor your system
4. Block suspicious IPs
5. Keep your firewall configured

Remember: It's easier to prevent an attack than to recover from one!]],
		1
	)

	self:_createSection(
		"üîê Password Security",
		[[Your password is your first line of defense!

WEAK Password (DON'T USE):
‚Ä¢ password, 123456, admin, root
‚Ä¢ Short (less than 8 characters)
‚Ä¢ Common words
‚Ä¢ Your username

STRONG Password (USE THIS):
‚Ä¢ 12+ characters long
‚Ä¢ Mix of letters, numbers, symbols
‚Ä¢ Example: MyR0blox#Pass2024!
‚Ä¢ Not in any dictionary

SET YOUR PASSWORD:
passwd MySecurePassword123!

The stronger your password, the harder it is to crack!]],
		2
	)

	self:_createSection(
		"üî• Firewall Setup",
		[[Your firewall controls who can connect to you:

CHECK STATUS:
ufw status

BLOCK EVERYTHING (except what you allow):
ufw deny 1-65535

ALLOW SPECIFIC SERVICES:
ufw allow 22    (SSH)
ufw allow 80    (Web server)
ufw allow 443   (Secure web)

BLOCK SPECIFIC PORTS:
ufw deny 1337

Good firewall = Hard to hack!]],
		3
	)

	self:_createSection(
		"üëÄ Monitoring for Attacks",
		[[Stay alert and watch for attackers:

REAL-TIME MONITORING:
‚Ä¢ monitor - Shows live alerts
‚Ä¢ connections - See who's connecting
‚Ä¢ authlog - View login attempts

WHAT TO LOOK FOR:
‚Ä¢ Multiple failed login attempts
‚Ä¢ Port scans from same IP
‚Ä¢ Unusual connection times
‚Ä¢ Unknown processes running

IF UNDER ATTACK:
1. block <attacker_ip>
2. snapshot restore <backup>
3. passwd <new_password>
4. isolate (disconnect from network)]],
		4
	)

	self:_createSection(
		"üíæ Backup Strategy",
		[[ALWAYS have backups!

CREATE BACKUPS:
snapshot create daily_backup
snapshot create before_experiment
snapshot create safe_state

LIST BACKUPS:
snapshot list

RESTORE IF NEEDED:
snapshot restore safe_state

BACKUP SCHEDULE:
‚Ä¢ Daily: Before you log off
‚Ä¢ Before: Trying something risky
‚Ä¢ After: Making big changes
‚Ä¢ Regular: Every few hours while playing]],
		5
	)

	self:_createSection(
		"üö® Emergency Response",
		[[If you're being hacked RIGHT NOW:

IMMEDIATE ACTIONS:
1. isolate
   (Disconnects you from network)

2. connections
   (See who's attacking)

3. block <their_ip>
   (Ban the attacker)

4. kill <suspicious_pid>
   (Stop malware)

5. snapshot restore safe_backup
   (Reset to clean state)

6. passwd <new_strong_password>
   (Change compromised password)

7. antivirus scan /
   (Check for remaining threats)

Stay calm and follow these steps!]],
		6
	)
end

function HandbookUI:_loadTipsContent()
	self:_createSection(
		"üí° Terminal Pro Tips",
		[[Make your life easier:

COMMAND HISTORY:
‚Ä¢ Press UP ARROW - See previous commands
‚Ä¢ Press DOWN ARROW - Go forward
‚Ä¢ Type: history - See all past commands

SHORTCUTS:
‚Ä¢ cd ~ - Go home quickly
‚Ä¢ cd .. - Go up one folder
‚Ä¢ pwd - "Where am I?"
‚Ä¢ clear - Clean up messy terminal

FILE TIPS:
‚Ä¢ Use descriptive names: attack_plan.txt
‚Ä¢ Organize with folders
‚Ä¢ Backup important files
‚Ä¢ Delete old junk with rm]],
		1
	)

	self:_createSection(
		"üéØ Becoming a Better Hacker",
		[[LEARNING PATH:
1. Master basic commands first
2. Practice file organization
3. Learn networking concepts
4. Try defense before offense
5. Experiment with attacks (safely!)
6. Study what works and what doesn't

PRACTICE IDEAS:
‚Ä¢ Create a target practice file system
‚Ä¢ Try hacking yourself (test your defenses!)
‚Ä¢ Document every technique you learn
‚Ä¢ Help beginners learn
‚Ä¢ Challenge yourself with hard passwords

Remember: Real hackers never stop learning!]],
		2
	)

	self:_createSection(
		"üóÇÔ∏è File Organization Tips",
		[[Keep your system organized:

SUGGESTED STRUCTURE:
/home/yourname/
  ‚îú‚îÄ‚îÄ work/
  ‚îÇ   ‚îú‚îÄ‚îÄ projects/
  ‚îÇ   ‚îú‚îÄ‚îÄ scripts/
  ‚îÇ   ‚îî‚îÄ‚îÄ logs/
  ‚îú‚îÄ‚îÄ security/
  ‚îÇ   ‚îú‚îÄ‚îÄ scans/
  ‚îÇ   ‚îú‚îÄ‚îÄ exploits/
  ‚îÇ   ‚îî‚îÄ‚îÄ payloads/
  ‚îú‚îÄ‚îÄ targets/
  ‚îÇ   ‚îú‚îÄ‚îÄ recon/
  ‚îÇ   ‚îú‚îÄ‚îÄ access/
  ‚îÇ   ‚îî‚îÄ‚îÄ notes/
  ‚îî‚îÄ‚îÄ backups/

CREATE THIS:
mkdir -p work/{projects,scripts,logs}
mkdir -p security/{scans,exploits,payloads}
mkdir targets

Organization = Efficiency!]],
		3
	)

	self:_createSection(
		"ü§ù Multiplayer Etiquette",
		[[Be a good player:

DO:
‚úÖ Ask before attacking
‚úÖ Help beginners learn
‚úÖ Share cool techniques
‚úÖ Report bugs to game devs
‚úÖ Have fun!

DON'T:
‚ùå Grief or harass players
‚ùå Spam attacks on same person
‚ùå Use exploits to cheat
‚ùå Share real personal info
‚ùå Be toxic in chat

Good sportsmanship makes the game fun for everyone!]],
		4
	)

	self:_createSection(
		"üéì Learning Resources",
		[[Want to learn more?

IN-GAME:
‚Ä¢ Type: help <command>
‚Ä¢ Read the welcome.txt file
‚Ä¢ Experiment safely
‚Ä¢ Ask other players

COMMAND EXAMPLES:
‚Ä¢ help passwd - Learn about passwords
‚Ä¢ help scan - Learn about scanning
‚Ä¢ help snapshot - Learn about backups

PRACTICE CHALLENGES:
1. Create 10 organized folders
2. Set a super strong password
3. Successfully defend against attack
4. Complete a recon mission
5. Help another player learn

The more you practice, the better you get!]],
		5
	)

	self:_createSection(
		"üèÜ Goals & Achievements",
		[[Track your progress:

BEGINNER (Everyone starts here):
‚ñ° Set your first password
‚ñ° Create a file with nano
‚ñ° Make a folder structure
‚ñ° Create a backup
‚ñ° Block an IP address

INTERMEDIATE:
‚ñ° Successfully scan another player
‚ñ° Defend against an attack
‚ñ° Restore from backup
‚ñ° Organize 20+ files
‚ñ° Help a beginner

ADVANCED:
‚ñ° Successful brute force attack
‚ñ° Deploy a payload
‚ñ° Maintain good reputation
‚ñ° Create complex scripts
‚ñ° Master all commands

EXPERT:
‚ñ° Hack multiple players
‚ñ° Never get hacked
‚ñ° Build legendary reputation
‚ñ° Teach others
‚ñ° Be a RobloxOS master!]],
		6
	)
end

function HandbookUI:_filterContent(searchText: string)
	if searchText == "" then
		-- Show all content
		for _, child in ipairs(self.contentFrame:GetChildren()) do
			if child:IsA("Frame") then
				child.Visible = true
			end
		end
		return
	end

	-- Filter content based on search
	local lowerSearch = string.lower(searchText)

	for _, child in ipairs(self.contentFrame:GetChildren()) do
		if child:IsA("Frame") then
			local titleLabel = child:FindFirstChild("Title")
			local contentLabel = child:FindFirstChild("Content")

			if titleLabel and contentLabel then
				local titleText = string.lower(titleLabel.Text)
				local contentText = string.lower(contentLabel.Text)

				if string.find(titleText, lowerSearch) or string.find(contentText, lowerSearch) then
					child.Visible = true
				else
					child.Visible = false
				end
			end
		end
	end
end

function HandbookUI:show()
	self.handbookFrame.Visible = true
	self.isVisible = true
end

function HandbookUI:hide()
	self.handbookFrame.Visible = false
	self.isVisible = false
end

function HandbookUI:toggle()
	if self.isVisible then
		self:hide()
	else
		self:show()
	end
end

function HandbookUI:destroy()
	if self.screenGui then
		self.screenGui:Destroy()
	end
end

return HandbookUI


